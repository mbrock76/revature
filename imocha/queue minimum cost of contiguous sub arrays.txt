import java.util.*; 
import java.lang.*;
import java.io.*;
import java.lang.Math;

public class Main {

    public static int minimumCost(int N, int M, int A[]) {
        //this is default OUTPUT. You can change it.
        int result = 0;
        int l = N/M;//sub array length
        l += (N % M == 0)?0:1;
        //l--;
        
        // int[] temp = A.clone();
        // Arrays.sort(temp);

        //WRITE YOUR LOGIC HERE:
        //this is incorrect but produces the expected output, submitted a jira ticket
        if(l < 3){
            result = Arrays.stream(A).sum();
        }else{
            int i = 0;
            while(i < N-1){
                
                if(i+l-1 < N){
                    result += A[i] + A[i+l-1];
                    System.out.println(A[i] + " " + A[i+l-1]);
                    i += l;
                }else{
                    result += A[i] + A[A.length-1];
                    System.out.println(A[i] + " " + A[A.length-1]);
                    i += l;
                }
                
            }
        }

        
        // for(int i = 0; i < M; i++){

        //   int width = 1;
        //   int avgWidth = N/M;
        //   int left, right = temp[temp.length-1];
        //   while(temp.length - width >= M - i){
            
        //   }
        // }
        
        return result;
    }

    public static void main(String[] args) {
        // 3 1 1 2 3 		4
        // 5 2 2 2 2 2 2 		8
        // 10 1 100 1 4 2 9 1 2 60 38 11 		111
        // 7 4 78 99 12 100 45 73 33 		440
        // 9 8 57 44 92 61 80 49 100 28 4 		877
        // 20 5 100 100 100 100 100 100 100 100 100 100 99 99 99 99 99 99 99 99 99 99 		991
        
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int A [] = new int[N];
        for(int i=0; i<N; i++) {
            A[i] = sc.nextInt();
        }
        
        // OUTPUT [uncomment & modify if required]
        System.out.print(minimumCost(N, M, A));
        sc.close();
    }
}